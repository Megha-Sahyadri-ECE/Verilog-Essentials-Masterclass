`timescale 1ns/1ps
module tb_mux;

reg a, b, s1;
wire y1;


reg clk, reset, s2, c;
wire y2;


mux2to1 uut1 (
    .a(a),
    .b(b),
    .s(s1),
    .y(y1)
);


registered_mux2to1 uut2 (
    .clk(clk),
    .reset(reset),
    .s(s2),
    .c(c),
    .y(y2)
);


always #5 clk = ~clk;

initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0, tb_mux);

   
    clk = 0;
    reset = 1; 
    s1 = 0; a = 0; b = 1;
    s2 = 0; c = 1;
    #10;

    reset = 0;

    
    s1 = 0; a = 0; b = 1; #10;
    s1 = 1; #10;
    a = 1; b = 0; s1 = 0; #10;
    s1 = 1; #10;

    
    s2 = 0; c = 1; #10;  
    s2 = 1; #20;        
    c = 0; #10;          
    s2 = 0; #10;         
    c = 0; #10;

    $finish;
end

endmodule
